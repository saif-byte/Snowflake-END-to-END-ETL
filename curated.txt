use database flight_delays_db;
use schema curated;

-- creating tables
create or replace TABLE FLIGHTS (
	YEAR NUMBER(38,0),
	MONTH NUMBER(38,0),
	DAY NUMBER(38,0),
	DAY_OF_WEEK NUMBER(38,0),
	AIRLINE VARCHAR(16777216),
	FLIGHT_NUMBER NUMBER(38,0),
	TAIL_NUMBER VARCHAR(16777216),
	ORIGIN_AIRPORT VARCHAR(16777216),
	DESTINATION_AIRPORT VARCHAR(16777216),
	SCHEDULED_DEPARTURE NUMBER(38,0),
	DEPARTURE_TIME NUMBER(38,0),
	DEPARTURE_DELAY NUMBER(38,0),
	TAXI_OUT NUMBER(38,0),
	WHEELS_OFF NUMBER(38,0),
	SCHEDULED_TIME NUMBER(38,0),
	ELAPSED_TIME NUMBER(38,0),
	AIR_TIME NUMBER(38,0),
	DISTANCE NUMBER(38,0),
	WHEELS_ON NUMBER(38,0),
	TAXI_IN NUMBER(38,0),
	SCHEDULED_ARRIVAL NUMBER(38,0),
	ARRIVAL_TIME NUMBER(38,0),
	ARRIVAL_DELAY NUMBER(38,0),
	DIVERTED NUMBER(38,0),
	CANCELLED NUMBER(38,0),
	CANCELLATION_REASON VARCHAR(16777216),
	AIR_SYSTEM_DELAY VARCHAR(16777216),
	SECURITY_DELAY VARCHAR(16777216),
	AIRLINE_DELAY VARCHAR(16777216),
	LATE_AIRCRAFT_DELAY VARCHAR(16777216),
	WEATHER_DELAY VARCHAR(16777216)
);


create or replace TABLE AIRPORTS (
	IATA_CODE VARCHAR(16777216),
	AIRPORT VARCHAR(16777216),
	CITY VARCHAR(16777216),
	STATE VARCHAR(16777216),
	COUNTRY VARCHAR(16777216),
	LATITUDE NUMBER(38,0),
	LONGITUDE NUMBER(38,0)
);

create or replace TABLE AIRLINES (
	C1 VARCHAR(16777216),
	C2 VARCHAR(16777216)
);

-- getting data from landing to curated zone;

insert into FLIGHTS (
	YEAR,
	MONTH,
	DAY ,
	DAY_OF_WEEK ,
	AIRLINE ,
	FLIGHT_NUMBER ,
	TAIL_NUMBER ,
	ORIGIN_AIRPORT ,
	DESTINATION_AIRPORT ,
	SCHEDULED_DEPARTURE ,
	DEPARTURE_TIME ,
	DEPARTURE_DELAY,
	TAXI_OUT ,
	WHEELS_OFF ,
	SCHEDULED_TIME ,
	ELAPSED_TIME ,
	AIR_TIME ,
	DISTANCE ,
	WHEELS_ON ,
	TAXI_IN ,
	SCHEDULED_ARRIVAL ,
	ARRIVAL_TIME ,
	ARRIVAL_DELAY ,
	DIVERTED ,
	CANCELLED,
	CANCELLATION_REASON ,
	AIR_SYSTEM_DELAY ,
	SECURITY_DELAY ,
	AIRLINE_DELAY ,
	LATE_AIRCRAFT_DELAY ,
	WEATHER_DELAY 
)
select 
YEAR,
	MONTH,
	DAY ,
	DAY_OF_WEEK ,
	AIRLINE ,
	FLIGHT_NUMBER ,
	TAIL_NUMBER ,
	ORIGIN_AIRPORT ,
	DESTINATION_AIRPORT ,
	SCHEDULED_DEPARTURE ,
	DEPARTURE_TIME ,
	DEPARTURE_DELAY,
	TAXI_OUT ,
	WHEELS_OFF ,
	SCHEDULED_TIME ,
	ELAPSED_TIME ,
	AIR_TIME ,
	DISTANCE ,
	WHEELS_ON ,
	TAXI_IN ,
	SCHEDULED_ARRIVAL ,
	ARRIVAL_TIME ,
	ARRIVAL_DELAY ,
	DIVERTED ,
	CANCELLED,
	CANCELLATION_REASON ,
	AIR_SYSTEM_DELAY ,
	SECURITY_DELAY ,
	AIRLINE_DELAY ,
	LATE_AIRCRAFT_DELAY ,
	WEATHER_DELAY 
from FLIGHT_DELAYS_DB.LANDING.FLIGHTS;


insert into AIRPORTS (
	IATA_CODE ,
	AIRPORT ,
	CITY ,
	STATE ,
	COUNTRY ,
	LATITUDE ,
	LONGITUDE 
)
select
IATA_CODE ,
	AIRPORT ,
	CITY ,
	STATE ,
	COUNTRY ,
	LATITUDE ,
	LONGITUDE 
from FLIGHT_DELAYS_DB.LANDING.AIRPORTS;



insert into AIRLINES (
	C1 ,
	C2 
)
select 
C1 , 
C2
from FLIGHT_DELAYS_DB.LANDING.AIRLINES;



-- creating task
create or replace task flight_task
warehouse = FLIGHT_DELAYS_WAREHOUSE
schedule = '1 minute'
when system$stream_has_data('FLIGHT_DELAYS_DB.LANDING.FLIGHT_STREAM')
as
merge into flights 
using FLIGHT_DELAYS_DB.LANDING.FLIGHT_STREAM FLIGHT_STREAM on
flights.YEAR = FLIGHT_STREAM.YEAR and
flights.MONTH = FLIGHT_STREAM.MONTH and
flights.DAY = FLIGHT_STREAM.DAY and
flights.DAY_OF_WEEK = FLIGHT_STREAM.DAY_OF_WEEK and
flights.AIRLINE = FLIGHT_STREAM.AIRLINE and
flights.TAIL_NUMBER = FLIGHT_STREAM.TAIL_NUMBER
when matched
then update set
  flights.FLIGHT_NUMBER = flight_stream.FLIGHT_NUMBER,
  flights.ORIGIN_AIRPORT = flight_stream.ORIGIN_AIRPORT,
  flights.DESTINATION_AIRPORT = flight_stream.DESTINATION_AIRPORT,
  flights.SCHEDULED_DEPARTURE = flight_stream.SCHEDULED_DEPARTURE,
  flights.DEPARTURE_TIME = flight_stream.DEPARTURE_TIME,
  flights.DEPARTURE_DELAY = flight_stream.DEPARTURE_DELAY,
  flights.TAXI_OUT = flight_stream.TAXI_OUT,
  flights.WHEELS_OFF = flight_stream.WHEELS_OFF,
  flights.SCHEDULED_TIME = flight_stream.SCHEDULED_TIME,
  flights.ELAPSED_TIME = flight_stream.ELAPSED_TIME,
  flights.AIR_TIME = flight_stream.AIR_TIME,
  flights.DISTANCE = flight_stream.DISTANCE,
  flights.WHEELS_ON = flight_stream.WHEELS_ON,
  flights.TAXI_IN = flight_stream.TAXI_IN,
  flights.SCHEDULED_ARRIVAL = flight_stream.SCHEDULED_ARRIVAL,
  flights.ARRIVAL_TIME = flight_stream.ARRIVAL_TIME,
  flights.ARRIVAL_DELAY = flight_stream.ARRIVAL_DELAY,
  flights.DIVERTED = flight_stream.DIVERTED,
  flights.CANCELLED = flight_stream.CANCELLED,
  flights.CANCELLATION_REASON = flight_stream.CANCELLATION_REASON,
  flights.AIR_SYSTEM_DELAY = flight_stream.AIR_SYSTEM_DELAY,
  flights.SECURITY_DELAY = flight_stream.SECURITY_DELAY,
  flights.AIRLINE_DELAY = flight_stream.AIRLINE_DELAY,
  flights.LATE_AIRCRAFT_DELAY = flight_stream.LATE_AIRCRAFT_DELAY,
  flights.WEATHER_DELAY = flight_stream.WEATHER_DELAY
when not matched
then
insert (
  YEAR, MONTH, DAY, DAY_OF_WEEK, AIRLINE, FLIGHT_NUMBER, TAIL_NUMBER, ORIGIN_AIRPORT, DESTINATION_AIRPORT,
  SCHEDULED_DEPARTURE, DEPARTURE_TIME, DEPARTURE_DELAY, TAXI_OUT, WHEELS_OFF, SCHEDULED_TIME, ELAPSED_TIME,
  AIR_TIME, DISTANCE, WHEELS_ON, TAXI_IN, SCHEDULED_ARRIVAL, ARRIVAL_TIME, ARRIVAL_DELAY, DIVERTED, CANCELLED,
  CANCELLATION_REASON, AIR_SYSTEM_DELAY,SECURITY_DELAY,AIRLINE_DELAY,LATE_AIRCRAFT_DELAY,WEATHER_DELAY
)
values(
flight_stream.YEAR,
  flight_stream.MONTH,
  flight_stream.DAY,
  flight_stream.DAY_OF_WEEK,
  flight_stream.AIRLINE,
  flight_stream.FLIGHT_NUMBER,
  flight_stream.TAIL_NUMBER,
  flight_stream.ORIGIN_AIRPORT,
  flight_stream.DESTINATION_AIRPORT,
  flight_stream.SCHEDULED_DEPARTURE,
  flight_stream.DEPARTURE_TIME,
  flight_stream.DEPARTURE_DELAY,
  flight_stream.TAXI_OUT,
  flight_stream.WHEELS_OFF,
  flight_stream.SCHEDULED_TIME,
  flight_stream.ELAPSED_TIME,
  flight_stream.AIR_TIME,
  flight_stream.DISTANCE,
  flight_stream.WHEELS_ON,
  flight_stream.TAXI_IN,
  flight_stream.SCHEDULED_ARRIVAL,
  flight_stream.ARRIVAL_TIME,
  flight_stream.ARRIVAL_DELAY,
  flight_stream.DIVERTED,
  flight_stream.CANCELLED,
  flight_stream.CANCELLATION_REASON,
  flight_stream.AIR_SYSTEM_DELAY,
  flight_stream.SECURITY_DELAY,
  flight_stream.AIRLINE_DELAY,
  flight_stream.LATE_AIRCRAFT_DELAY,
  flight_stream.WEATHER_DELAY
);



create or replace task airline_task
warehouse = FLIGHT_DELAYS_WAREHOUSE
schedule = '2 minute'
when 
system$stream_has_data('FLIGHT_DELAYS_DB.LANDING.AIRLINE_STREAM')
as 
merge into airlines 
using FLIGHT_DELAYS_DB.LANDING.AIRLINE_STREAM AIRLINE_STREAM on
airlines.C1 = AIRLINE_STREAM.C1 
when matched
then
update set
airlines.C2 = AIRLINE_STREAM.C2
when not matched then
insert(
C1, C2)
values(
AIRLINE_STREAM.C1 , 
AIRLINE_STREAM.C2 )
;

create or replace task airport_task 
warehouse = FLIGHT_DELAYS_WAREHOUSE
schedule = '3 minute'
when 
system$stream_has_data('FLIGHT_DELAYS_DB.LANDING.AIRPORT_STREAM')
as 
merge into airports
using FLIGHT_DELAYS_DB.LANDING.AIRPORT_STREAM AIRPORT_STREAM on
airports.IATA_CODE = AIRPORT_STREAM.IATA_CODE
when matched then
update set
airports.AIRPORT = AIRPORT_STREAM.AIRPORT,
  airports.CITY = AIRPORT_STREAM.CITY,
  airports.STATE = AIRPORT_STREAM.STATE,
  airports.COUNTRY = AIRPORT_STREAM.COUNTRY,
  airports.LATITUDE = AIRPORT_STREAM.LATITUDE,
  airports.LONGITUDE = AIRPORT_STREAM.LONGITUDE
when not matched then
insert(
IATA_CODE , AIRPORT, CITY, STATE, COUNTRY, LATITUDE, LONGITUDE
)
values(
AIRPORT_STREAM.IATA_CODE , 
AIRPORT_STREAM.AIRPORT, AIRPORT_STREAM.CITY, AIRPORT_STREAM.STATE, AIRPORT_STREAM.COUNTRY, AIRPORT_STREAM.LATITUDE, AIRPORT_STREAM.LONGITUDE
);

show tasks;

alter task FLIGHT_TASK resume;
alter task AIRLINE_TASK resume;
alter task AIRPORT_TASK resume;

select count(*) from flights; --10

select count(*) from airlines; --16

select count(*) from airports; --323




